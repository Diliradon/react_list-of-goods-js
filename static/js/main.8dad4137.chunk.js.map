{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServerId","map","good","id","uuidv4","SORT_ALPHABETICALLY","SORT_BY_LENGTH","App","useState","sortField","setSortField","reverseGoods","setReverseGoods","visibleGoods","goods","preparegoods","sort","good1","good2","localeCompare","length","reverse","getPrepareGoods","className","type","cn","onClick","ReactDOM","render","document","getElementById"],"mappings":"2PAmBMA,EAbyB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGwCC,KAAI,SAAAC,GAAI,MAAK,CACrDA,OACAC,GAAIC,kBAGAC,EAAsB,sBACtBC,EAAiB,iBA2BhB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAEMC,EA7BR,SAAyBC,EAAzB,GAA8D,IAA5BL,EAA2B,EAA3BA,UAAWE,EAAgB,EAAhBA,aACrCI,EAAY,YAAOD,GAqBzB,OAnBIL,GACFM,EAAaC,MAAK,cAAuC,IAA9BC,EAA6B,EAAnCf,KAAuBgB,EAAY,EAAlBhB,KACpC,OAAQO,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXT,GACFI,EAAaM,UAGRN,EAOcO,CACnBtB,EACA,CAAES,YAAWE,iBAQf,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYhB,IAAcJ,IAE9BqB,QAAS,kBAAMhB,EAAaL,IAP9B,iCAYA,wBACEmB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYhB,IAAcH,IAE9BoB,QAAS,kBAAMhB,EAAaJ,IAP9B,4BAYA,wBACEkB,KAAK,SACLD,UAAWE,IACT,SACA,aAAc,CAAE,YAAad,IAE/Be,QAAS,kBAAMd,GAAiBD,IANlC,sBAUEF,GAAaE,IACb,wBACEa,KAAK,SACLD,UAAU,4BACVG,QA9CU,WAClBhB,EAAa,IACbE,GAAgB,IAyCV,sBAWJ,6BACGC,EAAaZ,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAT,OAChB,oBAAI,UAAQ,OAAZ,SAA6BD,GAALC,YClHlCwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8dad4137.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport cn from 'classnames';\nimport './App.scss';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst goodsFromServerId = goodsFromServer.map(good => ({\n  good,\n  id: uuidv4(),\n}));\n\nconst SORT_ALPHABETICALLY = 'Sort alphabetically';\nconst SORT_BY_LENGTH = 'Sort by length';\n\nfunction getPrepareGoods(goods, { sortField, reverseGoods }) {\n  const preparegoods = [...goods];\n\n  if (sortField) {\n    preparegoods.sort(({ good: good1 }, { good: good2 }) => {\n      switch (sortField) {\n        case SORT_ALPHABETICALLY:\n          return good1.localeCompare(good2);\n\n        case SORT_BY_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverseGoods) {\n    preparegoods.reverse();\n  }\n\n  return preparegoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverseGoods, setReverseGoods] = useState(false);\n\n  const visibleGoods = getPrepareGoods(\n    goodsFromServerId,\n    { sortField, reverseGoods },\n  );\n\n  const hendleReset = () => {\n    setSortField('');\n    setReverseGoods(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortField !== SORT_ALPHABETICALLY },\n          )}\n          onClick={() => setSortField(SORT_ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortField !== SORT_BY_LENGTH },\n          )}\n          onClick={() => setSortField(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning', { 'is-light': !reverseGoods },\n          )}\n          onClick={() => setReverseGoods(!reverseGoods)}\n        >\n          Reverse\n        </button>\n        {(sortField || reverseGoods) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={hendleReset}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        {visibleGoods.map(({ good, id }) => (\n          <li data-cy=\"Good\" key={id}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}